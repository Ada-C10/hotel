Changes I would make...

I want to rescue if a date is not available and possibly rescue in the case of RoomBlock greater than 5.

I'm not sure what to do with RoomBlock greater 5; in this case, I just raised an exception.

I'm not sure if Hotel::RoomBlock should be a child of Hotel::Reservation so maybe I'd have to refactor there.

Some of my names are a bit too long, esp. in tests.

My tests are a bit too repetitive.

I would like to consolidate parsing room_block and reservation data, esp. in the case of loading in a csv. I would also change this method to load data instead of parse data.

I probably have a few too many helper methods.

I'm not sure if RoomBlock fits as a child of Reservation esp. as room_number is now an array for RoomBlock and just one single integer for Reservation. If I kept this structure, I'd  instantiate RoomBlock with instance variable room_numbers instead of room_number. I'd change Reservation to SingularBooking and RoomBlock to BlockBooking or something like that, and change ReservationManager to ReservationBooker.
