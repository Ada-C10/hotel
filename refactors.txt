
Refactor changes:
  ROOM CLASS
    -add_unavailablity could just be add_reservation. I was trying to keep the two classes completely independent of each other when it probably would have been more simple to add and instance of a reservation to an array in the rooms class
  RESERVATION CLASS
    -date? method... what is the date? It should be a little bit more specific about what its checking and in this case its returning true if a reservation includes the date
    -Couldn't decided if there needed to be a new class for the block reservations. But I allowed the availability to do blocks within my reservation class
    -Look into the methods are they doing to much? I like that my make_reservation method will also handle if someone were trying to reserve the block room, but maybe that's doing too much?
    -The make reservation method will always make a reservation in the first room available for a given date range, but lets say someone wants a particular room, or what if a block of rooms wants to be next to each other if those rooms are available? Maybe adding functionality that would offer solutions to these in the reservation manager.
    -Take in a hash instead of all the arguments
  RESERVATION MANAGER CLASS
    -Maybe it should just be called Reservation_Manager instead of MGr
    -I like the names in this class they are specific about what they are performing
--------------------------------------------------------------------------------
    What is this class's responsibility?
    Is this class responsible for exactly one thing?
    Does this class take on any responsibility that should be delegated to "lower level" classes?
    Is there code in other classes that directly manipulates this class's instance variables?
--------------------------------------------------------------------------------

  ReservationManager:
    - To manage rooms and reservations
    - Pretty good
    - It will create new instances of reservations and it will also add unavailable dates to the Room Class.
  Room:
    - It manages room availability
    - Yes.
    - No, only changes stuff about the room
    - The reservation manager will add unavailable dates to the Room if someone makes a reservation.
  Reservation:
    - Manages reservations and if they are in a block room
    - It could be broken up into two classes one for block reservations and one for regular reservations
    - Yes the reservation manager can change whether or not the block_available is true or false if someone makes a new reservation on a set of given block dates.


    How easy is it to follow your own instructions?
    Do these refactors improve the clarity of your code?
    Do you still agree with your previous assesment, or could your refactor be further improved?
